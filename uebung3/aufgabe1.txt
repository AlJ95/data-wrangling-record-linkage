1.) a)


SLK Blocking (Not suited for comparison...)

Generated Matches / Possible Matches through Blocking

                      simple threshold                 min threshold                 weighted threshold
                    0.5             0.7             0.5             0.7             0.5             0.7
1,000
clean               496/500         496/500         496/500         496/500         500/500           500/500
little-dirty        399/400         399/400         399/400         399/400         400/400           400/400

10,000
clean               4955/5002       4955/5002       4955/5002       4955/5002       5000/5002          5000/5002
little-dirty        3944/4000       3944/4000       3944/4000       3944/4000       4000/4000          4000/4000


Soundex Blocking

True-Positives/False-Positives/False-Negatives

                        simple threshold                                   min threshold                                weighted threshold
                    0.5                     0.7                     0.5                     0.7                     0.5                     0.7
1,000
clean               1024/500                502/500                 496/500                 496/500                 10500/598/ 0              500/1/ 0
little-dirty        455/148/45              454/1/46                426/0/74                401/0/99                455/152/45              455/0/45

10,000
clean               5000/47149/  0          5000/169/  0            4955/0/ 45              4955/0/  45             5000/54158/  0          5000/192/  0
little-dirty        4442/11039/558          4434/ 27/566            4171/0/819              3973/0/1027             4442/11961/558          4435/ 33/565

Matches

                        simple threshold                           min threshold                        weighted threshold
                    0.5                     0.7             0.5                     0.7            0.5                     0.7
1,000
clean               1024                    502             496                     496            1098                     501
little-dirty        603                     456             426                     401            602                      455

10,000
clean               52149                   5169            4955                    4955            59158                   5192
little-dirty        15483                   4461            4171                    3973            16403                   4468

1.) b)

Attribute mit hohen Gewichtungen haben mehr Einfluss auf ein Match, als Attribute mit kleineren Gewichtungen.
 Das macht vor allem dann Sinn, wenn gewisse Attribute eine geringere Anzahl an Möglichkeiten hat.
 Beispielsweise sollte das Attribut State einen geringe Gewichtung bekommen. Eine relativ hohe Gewichtung würde dazu führen, dass
 die durchschnittliche Ähnlichkeit pro gematchten Records steigt, da sehr viele Menschen im selben State leben.

1.) c)
Höhere Gewichtungen für Vor- und Nachnamen ([3.0, 1.0, 3.0, 2.0, 2.0, 1.0]) resultieren zu mehr FP Matches.
Auch das Vor- und Nachnamen auf 2.0 zu setzen und alles andere auf 1.0 zu lassen resultiert zu mehr FP. ([2.0, 1.0, 2.0, 1.0, 1.0, 1.0])

Das Soundex Blocking hat für die unsauberen Daten nur 455 Matches gemeinsam geblockt, sodass das die beste Klassifikation den weighted Threshold mit 0.7 darstellt.
Die vorgegebenen Gewichtungen sind daher für dieses Blocking bestmöglich.
Bei randomisierten Gewichten hat sich allerdings auch bewährt, den Nachnamen doppelt so stark zu gewichten und den Zweitnamen & State möglichst klein.
Daher wäre auch die folgenden Gewichtung für diesen Durchlauf bestmöglich: array([1, 0.05, 2., 1. , 1., 0.05])

1.) d)
Die meiner Ansicht nach beste Gewichtung ist [1, 0.05, 2., 1. ,1. ,0.05]
Diese hat 3 FP-Matches:
['', 'john', 'joseph', 'mcbride', 'm', '', '25/1/1967', '386  bridge  road', 'mackay', '4740', 'qld', '07  6076  2505', '']
['', 'john', 'd', 'morgan', 'm', '', '11/2/1993', '36  mcintyre  street', 'mackay', '4740', 'qld', '07  5387  6705', '']
-----------------
['', 'william', 'randal', 'johnson', 'm', '', '7/4/1973', '21  dock  street', 'south  brisbane', '4101', 'qld', '07  8503  2174', '']
['', 'william', 'anthony', 'johnson', 'm', '', '22/4/1981', '7  sealey  street', 'condobolin', '2877', 'nsw', '02  5115  9853', '']
-----------------
['', 'john', 'nils', 'morgan', 'm', '', '12/5/1988', '58  tyrell  street', 'wallsend', '2287', 'nsw', '02  1313  6667', '']
['', 'john', 'd', 'morgan', 'm', '', '11/2/1993', '36  mcintyre  street', 'mackay', '4740', 'qld', '07  5387  6705', '']
-----------------
Alle drei sind offensichtlich falsch. Besonders ersichtlich ist dies beim Geburtstag. In diesen Fällen wäre eine
Betrachtung des Geburtstages sinnvoll gewesen, wenn wir für dieses Attribut eine geeignete Ähnlichkeitsfunktion
implementieren würden. Voraussetzung wäre jedoch, dass Geburtstage selten fehlen.

Möglich wäre zum Beispiel eine AverageSimilarity von Geburtstagen im Format DD/MM/YYYY für jede Zahl.
Damit wären auch Schreibfehler gedeckt.